swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

  /accounts:
    get:
      security:
        - Bearer: []
      tags:
        - Account Module
      summary: User's accounts API
      description: API for Account
      parameters:
        - in: query
          name: userId
          description: ID of the user
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: "#/definitions/Account"
        "400":
          description: Invalid Fields
        "404":
          description: Account not found
        "500":
          description: Internal Server Error

  /transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: User's transaction API
      description: User's transactions from a specific account
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: query
          name: month
          description: Month of user's transaction (MM-YYYY)
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/Transaction"
        "400":
          description: Invalid account ID supplied
        "404":
          description: Account not found
        "405":
          description: Validation exception
        "500":
          description: Internal Server Error

  /transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Update transaction
      description: API for getting the user's transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: transactionId
          description: ID of the transaction
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: "#/definitions/Transaction"
        "400":
          description: Invalid account ID supplied
        "404":
          description: Account not found
        "405":
          description: Validation exception
        "500":
          description: Internal Server Error

    patch:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Update transaction
      description: API for updating the user's transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: transactionId
          description: ID of the transaction
          required: true
          type: integer
        - in: body
          name: body
          description: Update user transaction attributes
          required: true
          schema:
            type: array
            $ref: "#/definitions/UpdateTransaction"
      produces:
        - application/json
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: "#/definitions/UpdateTransaction"
        "400":
          description: Invalid account ID supplied
        "404":
          description: Account not found
        "405":
          description: Validation exception
        "500":
          description: Internal Server Error

    # put:
    #   security:
    #     - Bearer: []
    #   tags:
    #     - Transaction Module
    #   summary: Update transaction
    #   description: API for updating the user's transaction
    #   parameters:
    #     - in: header
    #       name: Authorization
    #       description: Attach Bearer JWT token
    #       required: true
    #       type: string
    #     - in: path
    #       name: transactionId
    #       description: ID of the transaction
    #       required: true
    #       type: integer
    #     - in: body
    #       name: body
    #       description: Update user transaction attributes
    #       required: true
    #       schema:
    #         type: array
    #         $ref: '#/definitions/UpdateTransaction'
    #   produces:
    #     - application/json
    #   responses:
    #     '200':
    #       description: Successful operation
    #       schema:
    #         $ref: '#/definitions/UpdateTransaction'
    #     '400':
    #       description: Invalid account ID supplied
    #     '404':
    #       description: Account not found
    #     '405':
    #       description: Validation exception
    #     '500':
    #       description: Internal Server Error

    # /transactions/{transactionId}:

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  Account:
    type: object
    properties:
      title:
        type: string
        example: "Argent Bank Checking (x8349)"
      amount:
        type: string
        example: "$2,082.79"
      description:
        type: string
        example: "Available Balance"
      accountId:
        type: string
        example: "check00"
  Transaction:
    type: object
    properties:
      createdAt:
        type: string
        example: "June 20th, 2020"
      description:
        type: object
        example: "Golden Sun Bakery"
      amount:
        type: number
        example: "$5.00"
      balance:
        type: number
        example: "$2082.79"
      type:
        type: object
        example: "Electronic"
      category:
        type: object
        example: "Sport"
      notes:
        type: object
        example: "Waiting for refund"
      transactionId:
        type: object
        example: "check01"
      accountId:
        type: object
        example: "check00"
  UpdateTransaction:
    type: object
    properties:
      # transactionId:
      #   type: object
      #   example: 'check01'
      category:
        type: object
        example: "Sport"
      notes:
        type: object
        example: "Sports equipment for Bob"
  DeleteTransaction:
    type: object
    properties:
      transactionId:
        type: object
        example: "check01"
      category:
        type: object
      notes:
        type: object
